{"version":3,"sources":["../src/datasource.js"],"names":["_","TimelionDatasource","instanceSettings","$q","backendSrv","templateSrv","timeSrv","jsonData","esVersion","type","url","name","q","options","headers","datasourceRequest","query","buildQueryParameters","oThis","targets","length","when","data","reqs","map","queries","request","method","then","readTimlionSeries","response","list","ix","label","d","all","flatten","series","sheet","testQuery","status","message","title","body","target","annotation","scopedVars","novalue","parseFloat","createAnnotations","reduce","result","filter","datapoints","dd","dp","timestamp","acc","v","concat","text","match","s","replace","RegExp","m","regexp","exec","tags","annotationReplace","split","time","queryResult","res","Object","assign","enable","annotationInfo","r","interpolated","range","timeRange","i","value","isObject","hide","queryTpl","from","utc","format","to","expandTemplate","keys","key","trim","interval","variables","t","indexOf","join","intervalGroups","groupBy","intervals","cloneDeep"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class TimelionDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv, timeSrv) {\n    instanceSettings.jsonData = instanceSettings.jsonData || {};\n    this.instanceSettings = instanceSettings;\n    this.esVersion = instanceSettings.jsonData.esVersion || \"5.3.0\";\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.timeSrv = timeSrv;\n  }\n\n  request(options) {\n    options.headers = {\n      \"kbn-version\": this.esVersion,\n      \"Content-Type\": \"application/json\"\n    };\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  query(options) {\n    var query = this.buildQueryParameters(options);\n    var oThis = this;\n    if (query.targets.length <= 0) {\n      return this.q.when({ data: [] });\n    }\n    var reqs = _.map(options.queries,\n      query => oThis.request({\n        url: this.url + '/run',\n        data: query,\n        method: 'POST'\n      })\n        .then(response => oThis.readTimlionSeries(response)\n          .map((list, ix) => ({\n            \"target\": list.label,\n            \"datapoints\": _.map(list.data, d => [d[1], d[0]])\n          }))));\n    return this.q.all(reqs).then(series => ({ \"data\": _.flatten(series) }))\n  }\n\n  readTimlionSeries(response) {\n    return _.flatten(_.map(response.data.sheet, sheet => sheet.list));\n  }\n\n  testDatasource() {\n    var testQuery = {\n      \"sheet\": [\".es(*)\"],\n      \"time\": {\n        \"from\": \"now-1m\",\n        \"to\": \"now\",\n        \"mode\": \"quick\",\n        \"interval\": \"auto\",\n        \"timezone\": \"Europe/Berlin\"\n      }\n    };\n    return this.request({\n      url: this.url + '/run',\n      method: 'POST',\n      data: testQuery\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      } else {\n        return { status: \"error\", message: response.body, title: `Error ${response.status}` };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    options.targets = [{ target: options.annotation.query }];\n    options.scopedVars = {};\n    var novalue = parseFloat(options.annotation.novalue||0);\n    return this.query(options)\n      .then(result => this.createAnnotations(options,\n        _.reduce(\n          _.map(result.data, d =>\n            _.map(_.filter(d.datapoints, dd => dd[0] !== novalue), dp =>\n              ({\n                target: `${d.target}: ${dp[0]}`,\n                timestamp: dp[1]\n              }))\n          )\n          , (acc, v) => acc.concat(v), [])\n      )\n    );\n  }\n\n  annotationReplace(text, match){\n    if(!text || !match) return text;\n    for(var s in match){\n      text = text.replace(new RegExp(`\\\\$${s}`, 'g'), match[s]);\n    }\n    return this.templateSrv.replace(text, null, 'regex');\n  }\n\n  annotationInfo(options, result) {\n    var m = options.regexp\n      ? new RegExp(options.regexp).exec(result.target)\n      : [];\n\n    const tags = (options.tags && options.tags.length) ?\n      this.annotationReplace(options.tags, m).split(','):\n      null;\n    \n    return {\n      title: this.annotationReplace(options.title, m),\n      time: result.timestamp,\n      text: this.annotationReplace(options.text, m),\n      tags: tags\n    };\n  }\n\n  createAnnotations(options, queryResult) {\n    var res = _.map(queryResult, r => Object.assign({\n      \"annotation\": {\n        \"name\": options.annotation.name,\n        \"enabled\": options.annotation.enable,\n        \"datasource\": \"Timelion\",\n      }},\n      this.annotationInfo(options.annotation, r)\n    ));\n    return res;\n  }\n\n  metricFindQuery(query) {\n    var interpolated = {\n      target: this.templateSrv.replace(query, null, 'regex')\n    };\n    return this[\"query\"]({\n      targets: [interpolated],\n      range: this.timeSrv.timeRange(),\n      scopedVars: {}\n    })\n      .then(series => {\n        return _.map(series.data, d => ({ text: d.target }));\n      });\n  }\n\n  mapToTextValue(result) {\n    return _.map(result.data, (d, i) => {\n      if (d && d.text && d.value) {\n        return { text: d.text, value: d.value };\n      } else if (_.isObject(d)) {\n        return { text: d, value: i };\n      }\n      return { text: d, value: d };\n    });\n  }\n\n  buildQueryParameters(options) {\n    var oThis = this;\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.target !== 'select metric' && !target.hide;\n    });\n\n    const queryTpl = {\n      \"sheet\": null,\n      \"time\": {\n        \"from\": options.range.from.utc().format(\"YYYY-MM-DDTHH:mm:ss\\\\Z\"),\n        \"interval\": \"auto\",\n        \"mode\": \"absolute\",\n        \"timezone\": \"GMT\",\n        \"to\": options.range.to.utc().format(\"YYYY-MM-DDTHH:mm:ss\\\\Z\")\n      }\n    };\n    var expandTemplate = function (target) {\n      _.map(Object.keys(options.scopedVars), key =>\n        target = target.replace(\"$\" + key, options.scopedVars[key].value));\n      return oThis.templateSrv\n        .replace(target, true)\n        .replace(/\\r\\n|\\r|\\n/mg, \"\")\n        .trim();\n    };\n    var targets = _.map(options.targets, target => {\n      return {\n        target: expandTemplate(target.target),\n        interval: expandTemplate(target.interval || \"auto\")\n      };\n    });\n    var variables = _.filter(_.map(options.targets, t => expandTemplate(t.target)),\n      t => t.indexOf(\"$\") == 0)\n      .join(\",\");\n    var intervalGroups = _.groupBy(targets, t => t.interval);\n    var intervals = Object.keys(intervalGroups);\n    var queries = _.map(intervals, key => ({\n      interval: key,\n      sheet: _.map(intervalGroups[key], target => (variables && variables.length) ?\n        [variables, target.target].join(\",\") :\n        target.target)\n    }));\n    options.queries = _.map(queries, q => {\n      queryTpl.sheet = q.sheet;\n      queryTpl.time.interval = !q.interval || q.interval === 'undefined' ? 'auto' : q.interval;\n      return _.cloneDeep(queryTpl);\n    });\n    return options;\n  }\n}\n"]}
